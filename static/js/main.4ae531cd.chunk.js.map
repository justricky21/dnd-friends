{"version":3,"sources":["content.js","assets/tiamat.jpg","assets/not-found.jpg","killListContent.js","assets/killListImages sync /^/.*$","assets/killListImages/azbaraJos.webp","assets/killListImages/bullywugs.jpg","assets/killListImages/captainOthelstan.webp","assets/killListImages/glazhaelTheCloudchaser.jpg","assets/killListImages/mosaicChimera.jpg","assets/killListImages/rezmir.webp","components/common/NavBar.js","pages/Home.js","components/page/killListMob.js","pages/KillList.js","pages/Characters.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Object","freeze","home","introduction","campaignDescriptionP1","campaignDescriptionP2","campaignDescriptionP3","campaignDescriptionP4","characters","currentAffairs","keyNPCs","lootBook","crafting","rulesFAQ","homebrew","bullywugs","displayName","boss","killCount","imagePath","flavor","cultists","kobolds","dragonclaws","commoners","mercenaries","acolytes","lizardfolk","ogres","duodrones","zombies","giantToads","dragonwings","duergar","perytons","giantSpiders","guardDrakes","yuanTiMalisons","trolls","shadowWitches","ettercaps","veterans","beardedDevils","goblins","twigBlights","hobgoblins","hobgoblinCaptains","hobgoblinWarlords","gargoyles","specters","ratSwarms","ambushDrakes","troglodytes","succubi","hillGiant","banshees","wights","blackPuddings","lizardfolkHuntmasters","mindFlayers","incubi","stoneGolems","wraiths","rabbits","frulamMondath","langdedrosaCyanwrath","ropers","koboldWarriors","koboldShamans","troglodyteMeatseekers","troglodyteShamans","mimics","wereRats","phaseSpiders","thugs","priests","mages","worgs","bodaks","direTrolls","trollShamans","lizardfolkChiefs","lizardfolkKeepers","lizardfolkAvengers","lizardfolkBeastcallers","duergarWarlords","forgarth","dralmorerBorngray","pharblexSpatergoo","glazhaelTheCloudchaser","rezmir","azbaraJos","captainOthelstan","mosaicChimera","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","NavBar","rootPage","className","to","icon","faBars","Home","content","allContent","src","tiamat","alt","Component","killListMob","props","mob","displayImage","notFound","require","KillList","contentValues","values","killListContent","v","key","Characters","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ae531cd.chunk.js","sourcesContent":["module.exports = Object.freeze({\r\n    home: {\r\n        introduction: 'This is the home page for the DnD Friends tabletop group!',\r\n        campaignDescriptionP1: \"For years, the evil Cult of the Dragon has devoted itself to creating undead dragons in a vain attempt to fulfill an ancient prophecy. However, the cultists were misguided. They misunderstood. But now, under new leadership, the cult believes that the prophecy does not speak of undead dragons, but of a dragon empire that's been extinct for 25,000 years. Tiamat, the queen of evil dragons, has languished in the Nine Hells for millennia. The cult believes that the time of her return is at hand.\",\r\n        campaignDescriptionP2: \"The cult has a new face and a new mission. It seeks to free Tiamat from the Nine Hells and bring her into the Forgotten Realms. To accomplish its goal, the cult needs five ancient dragon masks and the support of evil dragons everywhere. The cult leaders—each one a 'dragon whisperer'—have reached out to the evil dragons of the Sword Coast and earned their allegiance.\",\r\n        campaignDescriptionP3: \"Meanwhile, evil dragons in partnership with the cult seek to amass a treasure hoard worthy of their dark queen, not by plundering their own hoards (of course) but by stealing money from cities, caravans, good-aligned dragons, merchant ships, and other sources. Their ravenous hunt for treasure throws the Sword Coast into upheaval. Neverwinter, Waterdeep, Baldur's Gate—no city is safe from their depredations.\", \r\n        campaignDescriptionP4: \"The situation is dire. However, the Sword Coast is far from defenseless. Powerful factions are ready to rise up and put an end to the tyranny of dragons. Adventurers throughout the Realms must join forces to face Tiamat, destroy the Cult of the Dragon, and prevent the rise of a new dragon empire. The Harpers have since shared their intelligence with the remaining factions. To combat the Cult of the Dragon, Lord Dagult Neverember of Neverwinter proposes that adventurers representing each of the five factions be sent north to investigate—and to report back with haste. \\n In their hands, the future lies.\",\r\n    },\r\n    characters: {\r\n        \r\n    },\r\n    currentAffairs: {\r\n\r\n    },\r\n    keyNPCs: {\r\n\r\n    },\r\n    lootBook: {\r\n        \r\n    },\r\n    crafting: {\r\n\r\n    },\r\n    rulesFAQ: {\r\n\r\n    },\r\n    homebrew: {\r\n\r\n    },\r\n});","module.exports = __webpack_public_path__ + \"static/media/tiamat.294cffc5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/not-found.6017e4da.jpg\";","module.exports = {\r\n  bullywugs: {\r\n    displayName: 'Bullywugs',\r\n    boss: true,\r\n    killCount: 69,\r\n    imagePath: 'bullywugs.jpg',\r\n    flavor: 'Bullywugs were amphibian humanoids with the head of frogs, about the size of humans, with leathery, green or gray-mottled skin, and webbed digits. Their tongues were so large they almost prevented them from being capable of speaking common.'\r\n  },\r\n  cultists: {\r\n\r\n  },\r\n  kobolds: {\r\n\r\n  },\r\n  dragonclaws: {\r\n\r\n  },\r\n  commoners: {\r\n\r\n  },\r\n  mercenaries: {\r\n\r\n  },\r\n  acolytes: {\r\n\r\n  },\r\n  lizardfolk: {\r\n\r\n  },\r\n  ogres: {\r\n\r\n  },\r\n  duodrones: {\r\n\r\n  },\r\n  zombies: {\r\n\r\n  },\r\n  giantToads: {\r\n\r\n  },\r\n  dragonwings: {\r\n\r\n  },\r\n  duergar: {\r\n\r\n  },\r\n  perytons: {\r\n\r\n  },\r\n  giantSpiders: {\r\n\r\n  },\r\n  guardDrakes: {\r\n\r\n  },\r\n  yuanTiMalisons: {\r\n\r\n  },\r\n  trolls: {\r\n\r\n  },\r\n  shadowWitches: {\r\n\r\n  },\r\n  ettercaps: {\r\n\r\n  },\r\n  veterans: {\r\n\r\n  },\r\n  beardedDevils: {\r\n\r\n  },\r\n  goblins: {\r\n\r\n  },\r\n  twigBlights: {\r\n\r\n  },\r\n  hobgoblins: {\r\n\r\n  },\r\n  hobgoblinCaptains: {\r\n\r\n  },\r\n  hobgoblinWarlords: {\r\n\r\n  },\r\n  gargoyles: {\r\n\r\n  },\r\n  specters: {\r\n\r\n  },\r\n  ratSwarms: {\r\n\r\n  },\r\n  ambushDrakes: {\r\n\r\n  },\r\n  troglodytes: {\r\n\r\n  },\r\n  succubi: {\r\n\r\n  },\r\n  hillGiant: {\r\n\r\n  },\r\n  banshees: {\r\n\r\n  },\r\n  wights: {\r\n\r\n  },\r\n  blackPuddings: {\r\n\r\n  },\r\n  lizardfolkHuntmasters: {\r\n\r\n  },\r\n  mindFlayers: {\r\n\r\n  },\r\n  incubi: {\r\n\r\n  },\r\n  stoneGolems: {\r\n\r\n  },\r\n  wraiths: {\r\n\r\n  },\r\n  rabbits: {\r\n\r\n  },\r\n  frulamMondath: {\r\n\r\n  },\r\n  langdedrosaCyanwrath: {\r\n\r\n  },\r\n  ropers: {\r\n\r\n  },\r\n  koboldWarriors: {\r\n\r\n  },\r\n  koboldShamans: {\r\n\r\n  },\r\n  troglodyteMeatseekers: {\r\n\r\n  },\r\n  troglodyteShamans: {\r\n\r\n  },\r\n  mimics: {\r\n\r\n  },\r\n  wereRats: {\r\n\r\n  },\r\n  phaseSpiders: {\r\n\r\n  },\r\n  thugs: {\r\n\r\n  },\r\n  priests: {\r\n\r\n  },\r\n  mages: {\r\n\r\n  },\r\n  worgs: {\r\n\r\n  },\r\n  bodaks: {\r\n\r\n  },\r\n  direTrolls: {\r\n\r\n  },\r\n  trollShamans: {\r\n\r\n  },\r\n  lizardfolkChiefs: {\r\n\r\n  },\r\n  lizardfolkKeepers: {\r\n\r\n  },\r\n  lizardfolkAvengers: {\r\n\r\n  },\r\n  lizardfolkBeastcallers: {\r\n\r\n  },\r\n  duergarWarlords: {\r\n\r\n  },\r\n  forgarth: {\r\n\r\n  },\r\n  dralmorerBorngray: {\r\n\r\n  },\r\n  pharblexSpatergoo: {\r\n\r\n  },\r\n  glazhaelTheCloudchaser: {\r\n    displayName: 'Glazhael the Cloudchaser',\r\n    imagePath: 'glazhaelTheCloudchaser.jpg',\r\n    boss: true,\r\n    flavor: 'Glazhael the Cloudchaser was a white dragon allied with the reformed Cult of the Dragon of Severin. He remained in the Skyreach Castle to protect the hoard accumulated there.',\r\n    killCount: 1\r\n  },\r\n  rezmir: {\r\n    displayName: 'Rezmir',\r\n    boss: true,\r\n    killCount: 1,\r\n    imagePath: 'rezmir.webp',\r\n  },\r\n  azbaraJos: {\r\n    displayName: 'Azbara Jos',\r\n    boss: true,\r\n    killCount: 1,\r\n    imagePath: 'azbaraJos.webp',\r\n  },\r\n  captainOthelstan: {\r\n    displayName: 'Captain Othelstan',\r\n    boss: true,\r\n    killCount: 1,\r\n    imagePath: 'captainOthelstan.webp',\r\n  },\r\n  mosaicChimera: {\r\n    displayName: 'Mosaic Chimera',\r\n    boss: true,\r\n    killCount: 1,\r\n    imagePath: 'mosaicChimera.jpg',\r\n    flavor: 'The hallway opens onto a large chamber with an elaborate mosaic of a knight battling a chimera beneath a blazing sun. The adventurers are alarmed when the mosaic chimera comes to life and rises out of the floor to breathe very real fire on them.'\r\n  }\r\n\r\n}","var map = {\n\t\"./azbaraJos.webp\": 47,\n\t\"./bullywugs.jpg\": 48,\n\t\"./captainOthelstan.webp\": 49,\n\t\"./glazhaelTheCloudchaser.jpg\": 50,\n\t\"./mosaicChimera.jpg\": 51,\n\t\"./rezmir.webp\": 52\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46;","module.exports = __webpack_public_path__ + \"static/media/azbaraJos.c4a4079c.webp\";","module.exports = __webpack_public_path__ + \"static/media/bullywugs.3be0efd5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/captainOthelstan.7d582a21.webp\";","module.exports = __webpack_public_path__ + \"static/media/glazhaelTheCloudchaser.dfabf3b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mosaicChimera.c2f99c30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rezmir.10e169d7.webp\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport './NavBar.css'\r\n\r\nfunction NavBar() {\r\n    const rootPage = '/dnd-friends';\r\n    return (\r\n        <div className='nav'>\r\n            <ul className='nav-row'>\r\n                <Link to={`${rootPage}/`} >Home</Link>\r\n                <Link to={`${rootPage}/Characters`} >Characters</Link>\r\n                <Link to='#' >Current Affairs</Link>\r\n                <Link to='#' > Key NPCs</Link>\r\n                <Link to='#' >Loot Book</Link>\r\n                <Link to={`${rootPage}/KillList`} >Kill List</Link>\r\n                <Link to='#' >Crafting</Link>\r\n                <Link to='#' >Rules FAQ</Link>\r\n                <Link to='#' >Homebrew</Link>\r\n            </ul>\r\n            <div className='dropdown'>\r\n                <FontAwesomeIcon icon={faBars} />\r\n                <ul className='dropdown-content'>\r\n                    <Link to={`${rootPage}/`} >Home</Link>\r\n                    <Link to={`${rootPage}/Characters`} >Characters</Link>\r\n                    <Link to='#' >Current Affairs</Link>\r\n                    <Link to='#' > Key NPCs</Link>\r\n                    <Link to='#' >Loot Book</Link>\r\n                    <Link to={`${rootPage}/KillList`} >Kill List</Link>\r\n                    <Link to='#' >Crafting</Link>\r\n                    <Link to='#' >Rules FAQ</Link>\r\n                    <Link to='#' >Homebrew</Link>\r\n                </ul>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react'\r\nimport allContent from '../content'\r\nimport tiamat from '../assets/tiamat.jpg'\r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const content = allContent.home;\r\n    return (\r\n      <div className='container'>\r\n        <h1>The Tyranny of Dragons Homepage</h1>\r\n        <div className='content'>\r\n          <img className='tiamat-image' src={tiamat} alt='' />\r\n          <div className='campaign-description'>\r\n            <p>{content.campaignDescriptionP1}</p>\r\n            <p>{content.campaignDescriptionP2}</p>\r\n            <p>{content.campaignDescriptionP3}</p>\r\n            <p>{content.campaignDescriptionP4}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport notFound from '../../assets/not-found.jpg';\r\nimport './killListMob.css';\r\n\r\nexport default function killListMob(props) {\r\n    const { mob } = props;\r\n\r\n    let displayImage = notFound;\r\n    if (mob.imagePath) {\r\n        displayImage = require(`../../assets/killListImages/${mob.imagePath}`);\r\n    }\r\n\r\n    return (\r\n        <div className='kill-list-mob'>\r\n            <div className='kill-list-mob-title'>{mob.displayName}</div>\r\n            <div className='kill-list-mob-image-container'><img className='kill-list-mob-image' alt='' src={displayImage} /></div>\r\n            <div className='kill-list-mob-flavor'>{mob.flavor}</div>\r\n            {mob.killCount > 1 && <div className='kill-list-mob-kill-count'>{mob.killCount}</div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport KillListMob from '../components/page/killListMob'\r\nimport killListContent from '../killListContent'\r\nimport './KillList.css'\r\n\r\nclass KillList extends Component {    \r\n    render() {\r\n        const contentValues = Object.values(killListContent);\r\n        return (\r\n            <div className='kill-list'>\r\n                {contentValues.map(v => {\r\n                    if(v.displayName){\r\n                        return <KillListMob key={v.displayName} mob={v} />\r\n                    }\r\n                    return null;\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KillList;","import React, { Component } from 'react'\r\n\r\nclass Characters extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Characters;\r\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport NavBar from './components/common/NavBar'\nimport Home from './pages/Home';\nimport KillList from './pages/KillList';\nimport Characters from './pages/Characters';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const rootPage = '/dnd-friends';\n    return (\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path={`${rootPage}/KillList/`} component={KillList} />\n          <Route path={`${rootPage}/Characters/`} component={Characters} />\n          <Route path={`${rootPage}/`} component={Home} />\n          <Route path={`/`} component={Home} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}